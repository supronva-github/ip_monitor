version: '3.8'

services:
  ip_monitor:
    build:
      context: .
      dockerfile: .docker/Dockerfile
    entrypoint: ["/app/.docker/entrypoint.sh"]
    command: bundle exec puma -C config/puma.rb
    environment:
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DATABASE_URL=${DATABASE_URL}
      - ADMIN_USERNAME=${ADMIN_USERNAME}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - RACK_ENV=${RACK_ENV}
      - REDIS_URL=${REDIS_URL}
    ports:
      - "9292:9292"
    tty: true
    volumes:
      - bundle_cache:/usr/local/bundle
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - app_network

  sidekiq:
    build:
      context: .
      dockerfile: .docker/Dockerfile
    command: bundle exec sidekiq -r ./config/application.rb -v
    environment:
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DATABASE_URL=${DATABASE_URL}
      - RACK_ENV=${RACK_ENV}
      - REDIS_URL=${REDIS_URL}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - app_network

  db:
    image: postgres:15
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - pg:/var/lib/postgresql/data
    networks:
      - app_network

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  bundle_cache:
  pg:
